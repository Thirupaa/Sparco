specVersion: 0.0.2
description: PancakeSwap is a decentralized protocol for automated token exchange on
  Binance Smart Chain.
repository: https://github.com/pancakeswap
schema:
  file: schema.graphql
dataSources:
  - kind: ethereum/contract
    name: SmartChefFactory
    network: bsc
    source:
      address: "0x2f4519609cA7469f184A6E48816f01B30a8A883e"
      abi: SmartChefFactory
      startBlock: 18639160
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: SmartChefFactory/SmartChefFactory.wasm
      entities:
        - Factory
        - SmartChef
        - Token
      abis:
        - name: SmartChefFactory
          file: SmartChefFactory/abis/SmartChefFactory.json
        - name: SmartChef
          file: SmartChefFactory/abis/SmartChef.json
        - name: ERC20
          file: SmartChefFactory/abis/ERC20.json
        - name: ERC20NameBytes
          file: SmartChefFactory/abis/ERC20NameBytes.json
        - name: ERC20SymbolBytes
          file: SmartChefFactory/abis/ERC20SymbolBytes.json
      eventHandlers:
        - event: NewSmartChefContract(indexed address)
          handler: handleNewSmartChefContract
templates:
  - name: SmartChefInitializable
    kind: ethereum/contract
    network: bsc
    source:
      abi: SmartChef
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: templates/SmartChefInitializable/SmartChefInitializable.wasm
      entities:
        - SmartChef
        - User
      abis:
        - name: SmartChef
          file: SmartChefInitializable/abis/SmartChef.json
      eventHandlers:
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        - event: EmergencyWithdraw(indexed address,uint256)
          handler: handleEmergencyWithdraw
        - event: Withdraw(indexed address,uint256)
          handler: handleWithdraw
        - event: NewStartAndEndBlocks(uint256,uint256)
          handler: handleNewStartAndEndBlocks
        - event: NewRewardPerBlock(uint256)
          handler: handleNewRewardPerBlock
